{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "artifactsBaseUrl": {
            "defaultValue": "https://mprpdfartifactstore.azureedge.net/publicartifacts/infoblox.infoblox-nios-for-947c714a-2230-4801-8ec1-c14834b9e620-vnios/Artifacts",
            "type": "string",
            "metadata": {
                "description": "The base URL for dependent assets",
                "artifactsBaseUrl": ""
            }
        },
        "location": {
            "defaultValue": "[ResourceGroup().Location]",
            "type": "string",
            "metadata": {
                "description": "Location of resources."
            }
        },
        "vmName": {
            "defaultValue": "CSR",
            "type": "string",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "vmSize": {
            "allowedValues": [
                "Standard_DS2",
                "Standard_DS2_v2",
                "Standard_DS3",
                "Standard_DS3_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2"
            ],
            "type": "string",
            "metadata": {
                "description": "Size of the Virtual Machine."
            }
        },
        "niosModel": {
            "defaultValue": "vnios-te-v1420",
            "allowedValues": [
                "vnios-te-v820",
                "IB-V825",
                "vnios-te-v1420",
                "IB-V1425",
                "vnios-te-v2220",
                "IB-V2225",
                "vnios-cp-v800",
                "vnios-cp-v1400",
                "vnios-cp-v2200"
            ],
            "type": "string",
            "metadata": {
                "description": "niosModel."
            }
        },
        "niosVersion": {
            "defaultValue": "latest",
            "allowedValues": [
                "latest",
                "800.343389.3",
                "810.352813.0",
                "821.359366.0",
                "830.371835.0"
            ],
            "type": "string",
            "metadata": {
                "description": "niosVersion"
            }
        },
        "adminPassword": {
            "type": "string",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "virtualNetworkName": {
            "defaultValue": "NIOS_Network",
            "type": "string",
            "metadata": {
                "description": "VNet name"
            }
        },
        "virtualNetworkExistingRGName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Resource Group containing existing network"
            }
        },
        "subnet1Name": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Subnet 1 Name"
            }
        },
        "subnet1StartAddress": {
            "type": "string",
            "metadata": {
                "description": "Subnet 1 Starting IP Address"
            }
        },
        "subnet2Name": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Subnet 2 Name"
            }
        },
        "subnet2StartAddress": {
            "type": "string",
            "metadata": {
                "description": "Subnet 2 Starting IP Address"
            }
        },
        "publicIPAddressName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Name of the Public IP Address"
            }
        },
        "publicIPDnsName": {
            "defaultValue": "niosdns",
            "type": "string",
            "metadata": {
                "description": "Unique DNS Prefix for the Public IP used to access the Virtual Machine."
            }
        },
        "publicIPNewOrExistingOrNone": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing",
                "none"
            ],
            "type": "string",
            "metadata": {
                "description": "Indicates whether the Public IP is new or existing"
            }
        },
        "publicIPExistingRGName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Resource Group containing existing public IP"
            }
        },
        "availabilitySetNewOrExistingOrNone": {
            "defaultValue": "none",
            "allowedValues": [
                "new",
                "existing",
                "none"
            ],
            "type": "string",
            "metadata": {
                "description": "Indicates whether the availability Set IP is new, none or existing"
            }
        },
        "availabilitySetName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "availability set name"
            }
        },
        "customData": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Use space and '\n' symbols for indentation. Some custom data parameter are not available for Azure, please refer to Azure NIOS Guide for allowed parameters."
            }
        },
        "tempLicenseOption": {
            "defaultValue": "none",
            "allowedValues": [
                "none",
                "TE",
                "CP",
                "TE-SoT"
            ],
            "type": "string",
            "metadata": {
                "description": "Temporary license option."
            }
        },
        "storageAccountLogsName": {
            "type": "string"
        },
        "storageAccountName": {
            "type": "string"
        }
    },
    "variables": {
        "imagePublisher": "infoblox",
        "imageOffer": "infoblox-vnios-te-v1420",
        "imageSKU": "[variables(concat('imageSKUSoT-', variables('imageSKUSoT')))]",
        "imageSKUSoT": "[contains(parameters('niosModel'), 'IB-V')]",
        "tempLicense": "[variables(concat('tempLicense-', parameters('tempLicenseOption')))]",
        "version": "[parameters('niosVersion')]",
        "OSDiskName": "[concat(parameters('vmName'), uniqueString(resourceGroup().id))]",
        "vmStorageAccountContainerName": "disks",
        "vnetResourceId": "[resourceId(parameters('virtualNetworkExistingRGName'),'Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "subnet1ResourceId": "[concat(variables('vnetResourceId'),'/subnets/',parameters('subnet1Name'))]",
        "subnet2ResourceId": "[concat(variables('vnetResourceId'),'/subnets/',parameters('subnet2Name'))]",
        "nsgName": "[concat(parameters('vmName'),'-securityGroup')]",
        "nicPrimaryName": "[concat(parameters('vmName'),'-lan1')]",
        "nicSecondaryName": "[concat(parameters('vmName'),'-mgmt')]",
        "publicIPExistingOrNone": "[replace(parameters('publicIPNewOrExistingOrNone'), 'new', 'existing')]",
        "publicIpResourceId": "[variables(concat('publicIp-',parameters('publicIPNewOrExistingOrNone')))]",
        "apiVersion": "2016-06-01",
        "publicIPAddressType": "Dynamic",
        "publicIPSetupURL": "[concat(parameters('artifactsBaseUrl'),'/publicip-',parameters('publicIPNewOrExistingOrNone'),'.json')]",
        "nicPrimarySetupURL": "[concat(parameters('artifactsBaseUrl'),'/nic-pip',variables('publicIPExistingOrNone'),'.json')]",
        "nicSecondarySetupURL": "[concat(parameters('artifactsBaseUrl'),'/nic-pipnone.json')]",
        "customData": "[base64(concat('temp_license: ', variables('tempLicense'), '\n', 'default_admin_password: ', variables('sq'), replace(parameters('adminPassword'), variables('sq'), concat(variables('sq'), variables('sq'))), variables('sq'), '\n', parameters('customData')))]",
        "availabilitySetNewOrNone": "[replace(parameters('availabilitySetNewOrExistingOrNone'), 'existing', 'none')]",
        "availabilitySetExistingOrNone": "[replace(parameters('availabilitySetNewOrExistingOrNone'), 'new', 'existing')]",
        "availabilitySetSetupURL": "[concat(parameters('artifactsBaseUrl'),'/availabilityset-',variables('availabilitySetNewOrNone'),'.json')]",
        "storageAccountUri": "[concat('https://', parameters('storageAccountName'),'.blob.core.windows.net/')]",
        "storageAccountLogsUri": "[concat('https://', parameters('storageAccountLogsName'),'.blob.core.windows.net/')]",
        "sq": "'",
        "osProfile": {
            "computerName": "[parameters('vmName')]",
            "adminUsername": "[uniqueString(ResourceGroup().Id)]",
            "adminPassword": "[parameters('adminPassword')]",
            "customData": "[variables('customData')]"
        },
        "virtualMachineSetURL": "[concat(parameters('artifactsBaseUrl'),'/vm-availabilityset-', variables('availabilitySetExistingOrNone'),'.json')]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SettingUpPrimaryNic",
            "apiVersion": "[variables('apiVersion')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicPrimarySetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "nicName": {
                        "value": "[variables('nicPrimaryName')]"
                    },
                    "IPAddress": {
                        "value": "[parameters('subnet1StartAddress')]"
                    },
                    "subnetId": {
                        "value": "[variables('subnet1ResourceId')]"
                    },
                    "publicIPAddressId": {
                        "value": "[variables('publicIpResourceId')]"
                    },
                    "networkSecurityGroupId": {
                        "value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpPublicIP')]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SettingUpSecondaryNic",
            "apiVersion": "[variables('apiVersion')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicSecondarySetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "nicName": {
                        "value": "[variables('nicSecondaryName')]"
                    },
                    "IPAddress": {
                        "value": "[parameters('subnet2StartAddress')]"
                    },
                    "subnetId": {
                        "value": "[variables('subnet2ResourceId')]"
                    }
                }
            },
            "dependsOn": []
        },
        /*      {
            "type": "Microsoft.Resources/deployments",
            "name": "SettingUpPublicIP",
            "apiVersion": "[variables('apiVersion')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('publicIPSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "publicIPAddressName": {
                        "value": "[parameters('publicIPAddressName')]"
                    },
                    "publicIPAddressType": {
                        "value": "[variables('publicIPAddressType')]"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('publicIPDnsName')]"
                    },
                    "publicIpRGName": {
                        "value": "[parameters('publicIPExistingRGName')]"
                    }
                }
            }
        }, */
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SettingUpAvailabilitySet",
            "apiVersion": "[variables('apiVersion')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('availabilitySetSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "availabilitySetName": {
                        "value": "[parameters('availabilitySetName')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SettingUpVirtualMachine",
            "apiVersion": "[variables('apiVersion')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('virtualMachineSetURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[parameters('vmName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "plan": {
                        "value": {
                            "publisher": "[variables('imagePublisher')]",
                            "product": "[variables('imageOffer')]",
                            "name": "[variables('imageSKU')]"
                        }
                    },
                    "hardwareProfile": {
                        "value": {
                            "vmSize": "[parameters('vmSize')]"
                        }
                    },
                    "osProfile": {
                        "value": "[variables('osProfile')]"
                    },
                    "storageProfile": {
                        "value": {
                            "imageReference": {
                                "publisher": "[variables('imagePublisher')]",
                                "offer": "[variables('imageOffer')]",
                                "sku": "[variables('imageSKU')]",
                                "version": "[variables('version')]"
                            },
                            "osDisk": {
                                "name": "[variables('OSDiskName')]",
                                "vhd": {
                                    "uri": "[concat(variables('storageAccountUri'), variables('vmStorageAccountContainerName'), '/', variables('OSDiskName'), '.vhd')]"
                                },
                                "caching": "ReadOnly",
                                "createOption": "FromImage"
                            }
                        }
                    },
                    "networkProfile": {
                        "value": {
                            "networkInterfaces": [
                                {
                                    "id": "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicPrimaryName'))]",
                                    "properties": {
                                        "primary": true
                                    }
                                },
                                {
                                    "id": "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicSecondaryName'))]",
                                    "properties": {
                                        "primary": false
                                    }
                                }
                            ]
                        }
                    },
                    "diagnosticsProfile": {
                        "value": {
                            "bootDiagnostics": {
                                "enabled": "true",
                                "storageUri": "[variables('storageAccountUri')]"
                            }
                        }
                    },
                    "availabilitySet": {
                        "value": {
                            "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpPrimaryNic')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpSecondaryNic')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpAvailabilitySet')]"
            ]
        }
    ]
}