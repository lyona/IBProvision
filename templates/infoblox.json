{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "defaultValue": "[ResourceGroup().Location]",
            "type": "string",
            "metadata": {
                "description": "Location of resources."
            }
        },
        "vmName": {
            "defaultValue": "CSR",
            "type": "string",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "vmSize": {
            "allowedValues": [
                "Standard_DS2",
                "Standard_DS2_v2",
                "Standard_DS3",
                "Standard_DS3_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2"
            ],
            "type": "string",
            "metadata": {
                "description": "Size of the Virtual Machine."
            }
        },
        "niosModel": {
            "defaultValue": "vnios-te-v1420",
            "allowedValues": [
                "vnios-te-v820",
                "IB-V825",
                "vnios-te-v1420",
                "IB-V1425",
                "vnios-te-v2220",
                "IB-V2225",
                "vnios-cp-v800",
                "vnios-cp-v1400",
                "vnios-cp-v2200"
            ],
            "type": "string",
            "metadata": {
                "description": "niosModel."
            }
        },
        "niosVersion": {
            "defaultValue": "latest",
            "allowedValues": [
                "latest",
                "800.343389.3",
                "810.352813.0",
                "821.359366.0",
                "830.371835.0"
            ],
            "type": "string",
            "metadata": {
                "description": "niosVersion"
            }
        },
        "adminPassword": {
            "type": "string",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "virtualNetworkName": {
            "defaultValue": "NIOS_Network",
            "type": "string",
            "metadata": {
                "description": "VNet name"
            }
        },
        "virtualNetworkExistingRGName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Resource Group containing existing network"
            }
        },
        "subnet1Name": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Subnet 1 Name"
            }
        },
        "subnet1StartAddress": {
            "type": "string",
            "metadata": {
                "description": "Subnet 1 Starting IP Address"
            }
        },
        "subnet2Name": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Subnet 2 Name"
            }
        },
        "subnet2StartAddress": {
            "type": "string",
            "metadata": {
                "description": "Subnet 2 Starting IP Address"
            }
        },
        "publicIPAddressName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Name of the Public IP Address"
            }
        },
        "publicIPNewOrExistingOrNone": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing",
                "none"
            ],
            "type": "string",
            "metadata": {
                "description": "Indicates whether the Public IP is new or existing"
            }
        },
        "publicIPExistingRGName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Resource Group containing existing public IP"
            }
        },
        "availabilitySetNewOrExistingOrNone": {
            "defaultValue": "none",
            "allowedValues": [
                "new",
                "existing",
                "none"
            ],
            "type": "string",
            "metadata": {
                "description": "Indicates whether the availability Set IP is new, none or existing"
            }
        },
        "customData": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Use space and '\n' symbols for indentation. Some custom data parameter are not available for Azure, please refer to Azure NIOS Guide for allowed parameters."
            }
        },
        "tempLicenseOption": {
            "defaultValue": "none",
            "allowedValues": [
                "none",
                "TE",
                "CP",
                "TE-SoT"
            ],
            "type": "string",
            "metadata": {
                "description": "Temporary license option."
            }
        },
        "storageAccountLogsName": {
            "type": "string"
        },
        "storageAccountName": {
            "type": "string"
        },
        "nsgName": {
            "type": "string"
        }
    },
    "variables": {
        "imagePublisher": "infoblox",
        "imageOffer": "infoblox-vnios-te-v1420",
        "imageSKU": "[variables(concat('imageSKUSoT-', variables('imageSKUSoT')))]",
        "imageSKUSoT": "[contains(parameters('niosModel'), 'IB-V')]",
        "imageSKUSoT-true": "vsot",
        "imageSKUSoT-false": "[parameters('niosModel')]",
        "tempLicense": "[variables(concat('tempLicense-', parameters('tempLicenseOption')))]",
        "tempLicense-TE": "vnios enterprise dns cloud rpz",
        "tempLicense-CP": "vnios enterprise dns cloud_api rpz",
        "tempLicense-TE-SoT": "[concat('nios ', parameters('niosModel'), ' enterprise dns cloud rpz')]",
        "tempLicense-none": "",
        "version": "[parameters('niosVersion')]",
        "OSDiskName": "[concat(parameters('vmName'), uniqueString(resourceGroup().id))]",
        "vmStorageAccountContainerName": "disks",
        "vnetResourceId": "[resourceId(parameters('virtualNetworkExistingRGName'),'Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "subnet1ResourceId": "[concat(variables('vnetResourceId'),'/subnets/',parameters('subnet1Name'))]",
        "subnet2ResourceId": "[concat(variables('vnetResourceId'),'/subnets/',parameters('subnet2Name'))]",
        "nsgName": "[parameters('nsgName')]",
        "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        //"nsgId": "[resourceId(parameters('virtualNetworkExistingRGName'),'providers/Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
        //"nsgId": "/subscriptions/312baddd-ddd0-48fd-812a-c9571f7f86cb/resourceGroups/AlexLyonInfoblox/providers/Microsoft.Network/networkSecurityGroups/infoblox-nsg",
        "nicPrimaryName": "[concat(parameters('vmName'),'-lan')]",
        "nicSecondaryName": "[concat(parameters('vmName'),'-mgmt')]",
        "publicIpResourceId": "[resourceId(parameters('publicIPExistingRGName'),concat('Microsoft.Network','/','publicIPAddresses'),parameters('publicIPAddressName'))]",
        "customData": "[base64(concat('temp_license: ', variables('tempLicense'), '\n', 'default_admin_password: ', variables('sq'), replace(parameters('adminPassword'), variables('sq'), concat(variables('sq'), variables('sq'))), variables('sq'), '\n', parameters('customData')))]",
        "availabilitySetName": "[concat(parameters('vmName'),'-AS')]",
        "storageAccountUri": "[concat('https://', parameters('storageAccountName'),'.blob.core.windows.net/')]",
        "storageAccountLogsUri": "[concat('https://', parameters('storageAccountLogsName'),'.blob.core.windows.net/')]",
        "sq": "'",
    },
    "resources": [
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicPrimaryName')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('subnet1StartAddress')]",
                            "subnet": {
                                "id": "[variables('subnet1ResourceId')]"
                            },
                            "publicIPAddress": {
                                "id": "[variables('publicIpResourceId')]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                },
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "2016-03-30",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicSecondaryName')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('subnet2StartAddress')]",
                            "subnet": {
                                "id": "[variables('subnet2ResourceId')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('availabilitySetName')]",
            "location": "[parameters('location')]",
            "properties": {}
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "plan": {
                "name": "[variables('imageSKU')]",
                "publisher": "[variables('imagePublisher')]",
                "product": "[variables('imageOffer')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[uniqueString(ResourceGroup().Id)]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[variables('customData')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "[variables('version')]"
                    },
                    "osDisk": {
                        "name": "[variables('OSDiskName')]",
                        "vhd": {
                            "uri": "[concat(variables('storageAccountUri'), variables('vmStorageAccountContainerName'), '/', variables('OSDiskName'), '.vhd')]"
                        },
                        "caching": "ReadOnly",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicPrimaryName'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicSecondaryName'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[variables('storageAccountLogsUri')]"
                    }
                },
                /*      "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
                } */
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicPrimaryName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicSecondaryName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
            ]
        }
    ]
}